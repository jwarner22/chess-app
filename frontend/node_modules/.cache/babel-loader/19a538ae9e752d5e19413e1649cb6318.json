{"ast":null,"code":"var _jsxFileName = \"/Users/calebsmacbook/chess-app/src/components/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext } from \"react\";\nimport firebaseConfig from \"../config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('@firebase/auth');\n\nexport const AuthContext = /*#__PURE__*/React.createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const signup = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  const login = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const logout = () => {\n    return auth.signOut();\n  };\n\n  const resetPassword = email => {\n    return auth.sendPasswordResetEmail(email);\n  };\n\n  useEffect(() => {\n    firebaseConfig.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signup,\n      login,\n      logout,\n      resetPassword,\n      currentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"slkCpwDhAsCfHPbjAdlZVkO+nIs=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/calebsmacbook/chess-app/src/components/Auth.js"],"names":["React","useEffect","useState","createContext","firebaseConfig","require","AuthContext","AuthProvider","children","loading","setLoading","currentUser","setCurrentUser","signup","email","password","auth","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","onAuthStateChanged","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,cAAP,MAA2B,cAA3B;;;AACAC,OAAO,CAAC,gBAAD,CAAP;;AAEA,OAAO,MAAMC,WAAW,gBAAGN,KAAK,CAACG,aAAN,EAApB;AAEP,OAAO,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMW,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACpC,WAAOC,IAAI,CAACC,8BAAL,CAAoCH,KAApC,EAA2CC,QAA3C,CAAP;AACA,GAFA;;AAID,QAAMG,KAAK,GAAG,CAACJ,KAAD,EAAQC,QAAR,KAAqB;AAClC,WAAOC,IAAI,CAACG,0BAAL,CAAgCL,KAAhC,EAAuCC,QAAvC,CAAP;AACA,GAFD;;AAIA,QAAMK,MAAM,GAAG,MAAM;AACpB,WAAOJ,IAAI,CAACK,OAAL,EAAP;AACA,GAFD;;AAIA,QAAMC,aAAa,GAAIR,KAAD,IAAW;AAChC,WAAOE,IAAI,CAACO,sBAAL,CAA4BT,KAA5B,CAAP;AACA,GAFD;;AAKCb,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc,CAACY,IAAf,GAAsBQ,kBAAtB,CAA0CC,IAAD,IAAU;AACjDb,MAAAA,cAAc,CAACa,IAAD,CAAd;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACI,MAAAA,MAAD;AAASK,MAAAA,KAAT;AAAgBE,MAAAA,MAAhB;AAAwBE,MAAAA,aAAxB;AAAuCX,MAAAA;AAAvC,KAA7B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArCM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\nimport firebaseConfig from \"../config.js\";\nrequire('@firebase/auth')\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const signup = (email, password) => {\n\t\treturn\tauth.createUserWithEmailAndPassword(email, password)\n\t}\n\n\tconst login = (email, password) => {\n\t\treturn\tauth.signInWithEmailAndPassword(email, password)\n\t}\n\n\tconst logout = () => {\n\t\treturn auth.signOut()\n\t}\n\n\tconst resetPassword = (email) => {\n\t\treturn auth.sendPasswordResetEmail(email)\n\t}\n\n\n  useEffect(() => {\n    firebaseConfig.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  return (\n    <AuthContext.Provider value={{signup, login, logout, resetPassword, currentUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}
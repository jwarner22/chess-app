{"ast":null,"code":"var _jsxFileName = \"/Users/calebsmacbook/chess-app/src/components/PostLogin/DashboardNavbar/Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons/lib';\nimport { Nav, NavbarContainer, NavLogo, MobileIcons, NavMenu, NavItem, NavLinks, NavBtn, NavBtnLink, NavBtnLink2 } from './DashboardNavElements';\nimport { animateScroll as scroll } from 'react-scroll';\nimport firebaseConfig from \"../../../config\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../../Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashNavbar = ({\n  toggle\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  const [scrollNav, setScrollNav] = useState(false);\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', changeNav);\n  }, []);\n\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n      value: {\n        color: '#fff'\n      },\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        scrollNav: scrollNav,\n        children: /*#__PURE__*/_jsxDEV(NavbarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n            onClick: toggleHome,\n            to: \"/\",\n            children: \"Elo Elevation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MobileIcons, {\n            onClick: toggle,\n            children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavMenu, {\n            children: [/*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                children: \"Option 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLinks, {\n                children: \"Option 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavBtn, {\n            children: /*#__PURE__*/_jsxDEV(NavBtnLink, {\n              onClick: () => firebaseConfig.auth().signOut(),\n              children: \"Sign Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(DashNavbar, \"ccwPS4VRz1vKWReYKsQn0mo2uYs=\");\n\n_c = DashNavbar;\nexport default DashNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashNavbar\");","map":{"version":3,"sources":["/Users/calebsmacbook/chess-app/src/components/PostLogin/DashboardNavbar/Index.js"],"names":["React","useState","useEffect","useContext","FaBars","IconContext","Nav","NavbarContainer","NavLogo","MobileIcons","NavMenu","NavItem","NavLinks","NavBtn","NavBtnLink","NavBtnLink2","animateScroll","scroll","firebaseConfig","Redirect","AuthContext","DashNavbar","toggle","currentUser","scrollNav","setScrollNav","changeNav","window","scrollY","addEventListener","toggleHome","scrollToTop","color","auth","signOut"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport { FaBars } from 'react-icons/fa'\nimport {IconContext} from 'react-icons/lib'\nimport {\n     Nav, \n     NavbarContainer, \n     NavLogo, \n     MobileIcons, \n     NavMenu, \n     NavItem, \n     NavLinks, \n     NavBtn, \n     NavBtnLink, \n     NavBtnLink2\n    } from './DashboardNavElements'\nimport {animateScroll as scroll} from 'react-scroll'\nimport firebaseConfig from \"../../../config\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../../Auth\";\n\nconst DashNavbar = ({ toggle }) => {\n    const { currentUser } = useContext(AuthContext);\n    if (!currentUser) {\n    return <Redirect to=\"/login\" />; \n  }\n\n    \n    const [scrollNav, setScrollNav] = useState(false)\n\n    const changeNav = () => {\n        if(window.scrollY >= 80) {\n            setScrollNav(true)\n        } else {\n            setScrollNav(false)\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener('scroll', changeNav)\n    }, []);\n\n    const toggleHome = () => {\n        scroll.scrollToTop();\n    }\n    \n    return (\n        <>\n            <IconContext.Provider value={{color: '#fff'}}>\n                <Nav scrollNav={scrollNav}>\n                    <NavbarContainer>\n                        <NavLogo onClick={toggleHome} to='/'>\n                            Elo Elevation\n                        </NavLogo>\n                        <MobileIcons onClick={toggle}>\n                            <FaBars />\n                        </MobileIcons>\n                        <NavMenu>\n                            <NavItem>\n                                <NavLinks>\n                                    About\n                                </NavLinks>\n                            </NavItem>\n                            <NavItem>\n                                <NavLinks>\n                                    Option 2\n                                </NavLinks>\n                            </NavItem>\n                            <NavItem>\n                                <NavLinks> \n                                    Option 3\n                                </NavLinks>\n                            </NavItem>\n                        </NavMenu>\n                        <NavBtn>\n                            <NavBtnLink onClick={() => firebaseConfig.auth().signOut()}>\n                                Sign Out\n                            </NavBtnLink>\n                        </NavBtn>\n                    </NavbarContainer>\n                </Nav>\n            </IconContext.Provider>\n        </>\n    );\n};\n\nexport default DashNavbar"]},"metadata":{},"sourceType":"module"}